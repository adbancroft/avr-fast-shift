; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:megaatmega2560]
platform = atmelavr
board = megaatmega2560
framework = arduino

[env:ide_megaatmega2560]
extends = env:megaatmega2560
build_flags = -Wall -Wextra
build_src_flags = ${this.build_flags} -Wconversion -Werror
platform_packages =
    platformio/tool-simavr
test_speed = 9600
test_testing_command =
    ${platformio.packages_dir}/tool-simavr/bin/simavr
    -m
    atmega2560
    -f
    16000000L
    ${platformio.build_dir}/${this.__env__}/firmware.elf

[env:megaatmega2560-Os]
extends = env:ide_megaatmega2560
build_src_flags = ${this.build_flags} -DUNOPTIMIZED_BUILD

[env:megaatmega2560-O3]
extends = env:ide_megaatmega2560
build_unflags = -Os
build_flags = -O3
build_src_flags = -O3

[env:megaatmega2560_github_unit_test_action]
; PlatformIO SimAvr package doesn't run in the GitHub Ubuntu image:
;   error while loading shared libraries: libsimavr.so.1: cannot open shared object file: No such file or directory
;
; So instead we manually install SimAVR ('sudo apt-get install -y simavr')
; and run the unit tests using that instead.
extends = env:megaatmega2560
test_speed = 9600
test_testing_command =
    simavr
    -m
    atmega2560
    -f
    16000000L
    ${platformio.build_dir}/${this.__env__}/firmware.elf
    
[env:megaatmega2560-GitHubUnitTest-Os]
extends = env:megaatmega2560_github_unit_test_action
build_src_flags = ${env:megaatmega2560-Os.build_src_flags}

[env:megaatmega2560-GitHubUnitTest-O3]
extends = env:megaatmega2560_github_unit_test_action
build_unflags = ${env:megaatmega2560-O3.build_unflags}
build_flags = ${env:megaatmega2560-O3.build_flags}
build_src_flags = ${env:megaatmega2560-O3.build_src_flags}

[env:teensy41]
platform = teensy
board = teensy41
framework = arduino

[env:teensy35]
platform=teensy
board=teensy35
framework=arduino
extra_scripts = post:post_extra_script.py  
